[tool.poetry]
name = "aurelian"
version = "0.1.0"
description = "aurelian"
authors = ["Author 1 <author@org.org>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
click = "*"
importlib-metadata = ">=8.2.0"
oaklib = "^0.6.19"
tabulate = "^0.9.0"
linkml-store = {extras = ["llm", "mongodb"], version = "^0.2.4"}
bioregistry = "^0.11.35"
rdkit = {optional=true, version="*"}
gocam = {optional=true, version="*"}
linkml = {optional=true, version="*"}
gradio = {optional=true, version=">=4.0.0"}
bioservices = {optional=true, version="*"}
pydantic-ai = "^0.0.23"
logfire = "^3.5.3"
bs4 = "^0.0.2"
duckduckgo-search = "^7.3.2"
markdownify = "^0.14.1"
wikipedia = "^1.4.0"
markitdown = "^0.0.1a4"
pypaperbot = "^1.4.1"
undetected-chromedriver = "^3.5.5"

[tool.poetry.group.dev.dependencies]
pytest = {version = ">=8.3.2"}
tox = {version = ">=4.16.0"}
mypy = {version = "*"}
types-PyYAML = {version = "*"}
jupyter = {version = "*"}
papermill = {version = "*"}
nbdime = {version = "*"}
nbformat = {version = "*"}
pre-commit = {version = ">=3.3.3"}
mkdocs = "*"
mkdocs-mermaid2-plugin = "*"
mkdocstrings = {extras = ["crystal", "python"], version = "*"}
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"
mknotebooks = "^0.8.0"
mkdocs-windmill = "*"
mkdocs-material = "*"
mkdocs-click = "*"

[tool.poetry.extras]
rdkit = ["rdkit"]
gocam = ["gocam"]
gradio = ["gradio"]
bioservices = ["bioservices"]
linkml = ["linkml"]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = {version = ">=6.1.3"}
sphinx-rtd-theme = {version = ">=1.0.0"}
sphinx-autodoc-typehints = {version = ">=1.2.0"}
sphinx-click = {version = ">=4.3.0"}
myst-parser = {version = ">=0.18.1"}

[tool.poetry.scripts]
aurelian = "aurelian.cli:main"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310"]

[tool.ruff]
lint.extend-ignore = [
    "D211",  # `no-blank-line-before-class`
    "D212",  # `multi-line-summary-first-line`
    "D203",  # `blank-line-before-docstring`
    ]
line-length = 120

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]

# Select or ignore from https://beta.ruff.rs/docs/rules/
lint.select = [
    "B",  # bugbear
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "F",  # Pyflakes
    "I",  # isort
    "S",  # flake8-bandit
    "W",  # Warning
]

lint.unfixable = []
target-version = "py310"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.codespell]
skip = "*.po,*.ts,.git,pyproject.toml"
count = ""
quiet-level = 3
# ignore-words-list = ""

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
