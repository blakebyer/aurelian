name: oak-agent QC

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.11" ]  # Test both 3.9 and 3.11

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry Manually
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user poetry
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "export PATH=$HOME/.local/bin:$PATH" >> ~/.bashrc

      - name: Verify Poetry Installation
        run: |
          export PATH=$HOME/.local/bin:$PATH
          which poetry || echo "Poetry not found in PATH"
          poetry --version || echo "Poetry command failed"

      - name: Force Poetry to Use Correct Python Version
        run: |
          export PATH=$HOME/.local/bin:$PATH
          poetry env use python${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          export PATH=$HOME/.local/bin:$PATH
          poetry install --no-interaction

      - name: Check common spelling errors
        run: |
          export PATH=$HOME/.local/bin:$PATH
          poetry run tox -e codespell

      - name: Check code quality with flake8
        run: |
          export PATH=$HOME/.local/bin:$PATH
          poetry run tox -e lint

      - name: Test with pytest and generate coverage file
        run: |
          export PATH=$HOME/.local/bin:$PATH
          poetry run tox -e py
